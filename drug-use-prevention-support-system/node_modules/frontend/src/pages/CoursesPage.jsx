import React, { useState, useEffect } from 'react';
import { 
  Card, 
  Typography, 
  Row, 
  Col, 
  Button, 
  Tag, 
  Progress, 
  Input, 
  Select, 
  Space,
  Rate,
  Avatar,
  Badge,
  Divider,
  message
} from 'antd';
import { 
  ClockCircleOutlined, 
  PlayCircleOutlined, 
  UserOutlined,
  SearchOutlined,
  BookOutlined,
  TrophyOutlined,
  StarOutlined
} from '@ant-design/icons';
import authService from '../services/authService';
import courseService from '../services/courseService';
import { Link } from 'react-router-dom';

const { Title, Paragraph, Text } = Typography;
const { Search } = Input;
const { Option } = Select;

// Static course data for demo purposes - backend CourseController is currently disabled
// This should be replaced with real API calls when course management backend is ready
const courses = [
  {
    id: 1,
    title: 'Nh·∫≠n Th·ª©c V·ªÅ Ma T√∫y',
    description: 'Kh√≥a h·ªçc c∆° b·∫£n gi√∫p nh·∫≠n bi·∫øt c√°c lo·∫°i ma t√∫y, t√°c h·∫°i v√† c√°ch ph√≤ng tr√°nh hi·ªáu qu·∫£.',
    image: 'https://images.unsplash.com/photo-1558010089-ff6fd29ea39a?q=80&w=1925&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',
    duration: '6 gi·ªù 18 ph√∫t',
    lessons: 12,
    level: 'C∆° b·∫£n',
    category: 'Gi√°o d·ª•c',
    instructor: 'TS. Nguy·ªÖn VƒÉn H·ªçc',
    rating: 4.8,
    students: 1250,
    price: 0,
    tags: ['H·ªçc sinh', 'Sinh vi√™n', 'C∆° b·∫£n'],
    progress: 0,
    isEnrolled: false
  },
  {
    id: 2,
    title: 'K·ªπ NƒÉng Ph√≤ng Tr√°nh',
    description: 'Trang b·ªã k·ªπ nƒÉng t·ª´ ch·ªëi, ·ª©ng ph√≥ v√† t·ª± b·∫£o v·ªá tr∆∞·ªõc nguy c∆° s·ª≠ d·ª•ng ma t√∫y.',
    image: 'https://images.unsplash.com/photo-1580836618305-605c32623ae0?q=80&w=1935&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',
    duration: '4 gi·ªù 30 ph√∫t',
    lessons: 8,
    level: 'Trung b√¨nh',
    category: 'K·ªπ nƒÉng',
    instructor: 'ThS. Tr·∫ßn Th·ªã Ph√≤ng',
    rating: 4.9,
    students: 980,
    price: 0,
    tags: ['Thanh thi·∫øu ni√™n', 'K·ªπ nƒÉng s·ªëng'],
    progress: 25,
    isEnrolled: true
  },
  {
    id: 3,
    title: 'H·ªó Tr·ª£ Gia ƒê√¨nh',
    description: 'H∆∞·ªõng d·∫´n ph·ª• huynh, gi√°o vi√™n c√°ch h·ªó tr·ª£ v√† gi√°o d·ª•c ng∆∞·ªùi tr·∫ª ph√≤ng ng·ª´a ma t√∫y.',
    image: 'https://plus.unsplash.com/premium_photo-1664373232872-e1301e6e610b?q=80&w=1976&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',
    duration: '3 gi·ªù 45 ph√∫t',
    lessons: 6,
    level: 'N√¢ng cao',
    category: 'Gia ƒë√¨nh',
    instructor: 'PGS. L√™ VƒÉn Tr·ª£',
    rating: 4.7,
    students: 650,
    price: 0,
    tags: ['Ph·ª• huynh', 'Gi√°o vi√™n', 'Gia ƒë√¨nh'],
    progress: 100,
    isEnrolled: true
  },
  {
    id: 4,
    title: 'T√¢m L√Ω H·ªçc Ph√≤ng Ch·ªëng',
    description: 'Kh√≥a h·ªçc chuy√™n s√¢u v·ªÅ t√¢m l√Ω h·ªçc trong c√¥ng t√°c ph√≤ng ch·ªëng t·ªá n·∫°n x√£ h·ªôi.',
    image: 'https://images.unsplash.com/photo-1573496359142-b8d87734a5a2?q=80&w=1976&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',
    duration: '8 gi·ªù 20 ph√∫t',
    lessons: 16,
    level: 'N√¢ng cao',
    category: 'T√¢m l√Ω',
    instructor: 'TS. Ph·∫°m Th·ªã L√Ω',
    rating: 4.9,
    students: 420,
    price: 299000,
    tags: ['Chuy√™n nghi·ªáp', 'T√¢m l√Ω h·ªçc'],
    progress: 0,
    isEnrolled: false
  }
];

export default function CoursesPage() {
  const [filteredCourses, setFilteredCourses] = useState([]);
  const [allCourses, setAllCourses] = useState([]);
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [selectedLevel, setSelectedLevel] = useState('all');
  const [currentUser, setCurrentUser] = useState(null);

  useEffect(() => {
    setCurrentUser(authService.getCurrentUser());
    // L·∫•y danh s√°ch kh√≥a h·ªçc t·ª´ service (mock data d√πng chung v·ªõi staff)
    courseService.getCourses().then(res => {
      setAllCourses(res.data || []);
      setFilteredCourses(res.data || []);
    });
  }, []);

  useEffect(() => {
    filterCourses();
    // eslint-disable-next-line
  }, [searchTerm, selectedCategory, selectedLevel, allCourses]);

  const filterCourses = () => {
    let filtered = allCourses;
    if (searchTerm) {
      filtered = filtered.filter(course =>
        course.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
        course.description.toLowerCase().includes(searchTerm.toLowerCase())
      );
    }
    if (selectedCategory !== 'all') {
      filtered = filtered.filter(course => course.category === selectedCategory);
    }
    if (selectedLevel !== 'all') {
      filtered = filtered.filter(course => course.level === selectedLevel);
    }
    setFilteredCourses(filtered);
  };

  const handleEnroll = (courseId) => {
    if (!authService.isAuthenticated()) {
      message.warning('Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ ƒëƒÉng k√Ω kh√≥a h·ªçc');
      return;
    }
    message.success('ƒêƒÉng k√Ω kh√≥a h·ªçc th√†nh c√¥ng!');
  };

  const getLevelColor = (level) => {
    switch (level) {
      case 'C∆° b·∫£n': return 'green';
      case 'Trung b√¨nh': return 'orange';
      case 'N√¢ng cao': return 'red';
      default: return 'blue';
    }
  };

  return (
    <div style={{ minHeight: '100vh', maxWidth: '1200px', margin: '0 auto' }}>
      {/* Hero Section */}
      <Card style={{
        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
        border: 'none',
        borderRadius: '16px',
        marginBottom: '32px',
        textAlign: 'center'
      }}>
        <div style={{ padding: '40px 20px', color: '#fff' }}>
          <div style={{ fontSize: '64px', marginBottom: '24px' }}>üìö</div>
          <Title level={2} style={{ color: '#fff', marginBottom: '16px' }}>
            Kh√≥a H·ªçc Ph√≤ng Ch·ªëng T·ªá N·∫°n
          </Title>
          <Paragraph style={{ color: '#fff', fontSize: '16px', opacity: 0.9 }}>
            N√¢ng cao ki·∫øn th·ª©c v√† k·ªπ nƒÉng ph√≤ng ng·ª´a ma t√∫y v·ªõi c√°c kh√≥a h·ªçc ch·∫•t l∆∞·ª£ng
          </Paragraph>
        </div>
      </Card>

      {/* Search & Filters */}
      <Card style={{ marginBottom: '24px', borderRadius: '12px' }}>
        <Row gutter={[16, 16]} align="middle">
          <Col xs={24} md={12}>
            <Search
              placeholder="T√¨m ki·∫øm kh√≥a h·ªçc..."
              allowClear
              size="large"
              prefix={<SearchOutlined />}
              onChange={(e) => setSearchTerm(e.target.value)}
              style={{ borderRadius: '8px' }}
            />
          </Col>
          <Col xs={12} md={6}>
            <Select
              placeholder="Danh m·ª•c"
              size="large"
              style={{ width: '100%' }}
              value={selectedCategory}
              onChange={setSelectedCategory}
            >
              <Option value="all">T·∫•t c·∫£ danh m·ª•c</Option>
              <Option value="Gi√°o d·ª•c">Gi√°o d·ª•c</Option>
              <Option value="K·ªπ nƒÉng">K·ªπ nƒÉng</Option>
              <Option value="Gia ƒë√¨nh">Gia ƒë√¨nh</Option>
              <Option value="T√¢m l√Ω">T√¢m l√Ω</Option>
            </Select>
          </Col>
          <Col xs={12} md={6}>
            <Select
              placeholder="C·∫•p ƒë·ªô"
              size="large"
              style={{ width: '100%' }}
              value={selectedLevel}
              onChange={setSelectedLevel}
            >
              <Option value="all">T·∫•t c·∫£ c·∫•p ƒë·ªô</Option>
              <Option value="C∆° b·∫£n">C∆° b·∫£n</Option>
              <Option value="Trung b√¨nh">Trung b√¨nh</Option>
              <Option value="N√¢ng cao">N√¢ng cao</Option>
            </Select>
          </Col>
        </Row>
      </Card>

      {/* My Learning Progress (if user is logged in and has enrolled courses) */}
      {currentUser && (
        <Card title="üìà Ti·∫øn ƒê·ªô H·ªçc T·∫≠p C·ªßa T√¥i" style={{ marginBottom: '24px' }}>
          <Row gutter={[16, 16]}>
            {courses.filter(course => course.isEnrolled).map(course => (
              <Col xs={24} md={8} key={`progress-${course.id}`}>
                <Card size="small" style={{ borderRadius: '8px' }}>
                  <Space direction="vertical" style={{ width: '100%' }}>
                    <Text strong>{course.title}</Text>
                    <Progress
                      percent={course.progress}
                      status={course.progress === 100 ? 'success' : 'active'}
                      strokeColor={{
                        '0%': '#667eea',
                        '100%': '#764ba2',
                      }}
                    />
                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>
                      <Text type="secondary">{course.progress}% ho√†n th√†nh</Text>
                      {course.progress === 100 && (
                        <Badge count={<TrophyOutlined style={{ color: '#faad14' }} />} />
                      )}
                    </div>
                  </Space>
                </Card>
              </Col>
            ))}
          </Row>
        </Card>
      )}

      {/* Danh s√°ch kh√≥a h·ªçc */}
      <Row gutter={[24, 24]}>
        {filteredCourses.map(course => (
          <Col xs={24} md={12} lg={8} key={course.id}>
            <Card
              hoverable
              cover={<img alt={course.title} src={course.imageUrl || course.image} style={{ height: 180, objectFit: 'cover' }} />}
              style={{ borderRadius: '12px', marginBottom: 16 }}
            >
              <Title level={4} style={{ marginBottom: 8 }}>
                <Link to={`/courses/${course.id}`} target="_blank" rel="noopener noreferrer">{course.title}</Link>
              </Title>
              <Paragraph ellipsis={{ rows: 2 }}>{course.description}</Paragraph>
              <div style={{ marginBottom: 8 }}>
                <Tag color="blue">{course.category}</Tag>
                <Tag color="purple">{course.level || course.status}</Tag>
              </div>
              <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
                <Text type="secondary">Instructor: {course.instructor}</Text>
                <Text type="secondary">{course.price ? `${course.price.toLocaleString()} VNƒê` : 'Free'}</Text>
              </div>
              <Button type="primary" block style={{ marginTop: 12 }}>
                <Link to={`/courses/${course.id}`} target="_blank" rel="noopener noreferrer">View Course</Link>
              </Button>
            </Card>
          </Col>
        ))}
      </Row>

      {filteredCourses.length === 0 && (
        <Card style={{ textAlign: 'center', padding: '40px', marginTop: '24px' }}>
          <div style={{ fontSize: '64px', marginBottom: '16px' }}>üîç</div>
          <Title level={4}>Kh√¥ng t√¨m th·∫•y kh√≥a h·ªçc ph√π h·ª£p</Title>
          <Paragraph type="secondary">
            Th·ª≠ thay ƒë·ªïi t·ª´ kh√≥a t√¨m ki·∫øm ho·∫∑c b·ªô l·ªçc ƒë·ªÉ t√¨m kh√≥a h·ªçc mong mu·ªën.
          </Paragraph>
        </Card>
      )}
    </div>
  );
} 